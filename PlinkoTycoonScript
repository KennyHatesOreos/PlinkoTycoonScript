local Rayfield = loadstring(game:HttpGet('https://sirius.menu/rayfield'))()
local Window = Rayfield:CreateWindow({
   Name = "Plinko Tycoon",
   Icon = 0, -- Icon in Topbar. Can use Lucide Icons (string) or Roblox Image (number). 0 to use no icon (default).
   LoadingTitle = "Plinko Tycoon",
   LoadingSubtitle = "by OreoScripts",
   Theme = "DarkBlue", -- Check https://docs.sirius.menu/rayfield/configuration/themes

   DisableRayfieldPrompts = false,
   DisableBuildWarnings = false, -- Prevents Rayfield from warning when the script has a version mismatch with the interface

   ConfigurationSaving = {
      Enabled = true,
      FolderName = OreoHub, -- Create a custom folder for your hub/game
      FileName = "Plinko Oreo Hub"
   },

   Discord = {
      Enabled = false, -- Prompt the user to join your Discord server if their executor supports it
      Invite = "noinvitelink", -- The Discord invite code, do not include discord.gg/. E.g. discord.gg/ ABCD would be ABCD
      RememberJoins = true -- Set this to false to make them join the discord every time they load it up
   },

   KeySystem = true, -- Set this to true to use our key system
   KeySettings = {
      Title = "Oreo Plinko Tycoon",
      Subtitle = "Key System",
      Note = " Check Youtube Description", -- Use this to tell the user how to get a key
      FileName = "OreoSexKey", -- It is recommended to use something unique as other scripts using Rayfield may overwrite your key file
      SaveKey = true, -- The user's key will be saved, but if you change the key, they will be unable to use your script
      GrabKeyFromSite = false, -- If this is true, set Key below to the RAW site you would like Rayfield to get the key from
      Key = {"Oreo"} -- List of keys that will be accepted by the system, can be RAW file links (pastebin, github etc) or simple strings ("hello","key22")
   }
})
local Tab = Window:CreateTab("Balls", 4483362458) -- Title, Image
local Button = Tab:CreateButton({
   Name = "5Million",
   Callback = function()
   -- The function that takes place when the button is pressed
local args = {
    [1] = 15
}

local RemoteEvent = game:GetService("ReplicatedStorage")
    :WaitForChild("rbxts_include")
    :WaitForChild("node_modules")
    :WaitForChild("@rbxts")
    :WaitForChild("remo")
    :WaitForChild("src")
    :WaitForChild("container")
    :WaitForChild("plinko.onBallCollected")

for i = 1, 50 do
    RemoteEvent:FireServer(unpack(args))
end
   end,
})
local Button = Tab:CreateButton({
   Name = "Upcap Ball Limit",
   Callback = function()
   -- The function that takes place when the button is pressed
-- This script was generated by Hydroxide's RemoteSpy: https://github.com/Upbolt/Hydroxide

local ohNumber1 = 9999999

game:GetService("ReplicatedStorage").rbxts_include.node_modules["@rbxts"].remo.src.container["settings.setBallLimit"]:FireServer(ohNumber1)
   end,
})
local Button = Tab:CreateButton({
   Name = "15Billion",
   Callback = function()
   -- The function that takes place when the button is pressed
local args = {
    [1] = 25
}

local RemoteEvent = game:GetService("ReplicatedStorage")
    :WaitForChild("rbxts_include")
    :WaitForChild("node_modules")
    :WaitForChild("@rbxts")
    :WaitForChild("remo")
    :WaitForChild("src")
    :WaitForChild("container")
    :WaitForChild("plinko.onBallCollected")

for i = 1, 50 do
    RemoteEvent:FireServer(unpack(args))
end
   end,
})
local Button = Tab:CreateButton({
   Name = "???",
   Callback = function()
   -- The function that takes place when the button is pressed
local ohNumber1 = 10

game:GetService("ReplicatedStorage").rbxts_include.node_modules["@rbxts"].remo.src.container["plinko.onBallCollected"]:FireServer(ohNumber1)
})

local Divider = Tab:CreateDivider()
local Button = Tab:CreateButton({
   Name = "Crash Client/Server",
   Callback = function()
   -- The function that takes place when the button is pressed
local args = {
    [1] = 1
}

local RemoteEvent = game:GetService("ReplicatedStorage")
    :WaitForChild("rbxts_include")
    :WaitForChild("node_modules")
    :WaitForChild("@rbxts")
    :WaitForChild("remo")
    :WaitForChild("src")
    :WaitForChild("container")
    :WaitForChild("plinko.onBallCollected")

for i = 1, 5000000 do
    RemoteEvent:FireServer(unpack(args))
end
   end,
})

local Tab = Window:CreateTab("Pets", 4483362458) -- Title, Image
local Section = Tab:CreateSection("Pets")
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local EquipBest = ReplicatedStorage:WaitForChild("rbxts_include")
    :WaitForChild("node_modules")
    :WaitForChild("@rbxts")
    :WaitForChild("remo")
    :WaitForChild("src")
    :WaitForChild("container")
    :WaitForChild("pets.equipBest")

local ToggleEnabled = false -- Track toggle state

local Toggle = Tab:CreateToggle({
   Name = "Equip Best",
   CurrentValue = false,
   Flag = "Toggle1",
   Callback = function(Value)
       ToggleEnabled = Value -- Update the toggle state
       
       if ToggleEnabled then
           -- Trigger the server call only when the toggle is ON
           EquipBest:InvokeServer()
       end
   end,
})

local Tab = Window:CreateTab("Eggs", 4483362458) -- Title, Image
local Section = Tab:CreateSection("Eggs")

local args = {
    [1] = "Dragon",
    [2] = 1
}

local toggled = false

local Toggle = Tab:CreateToggle({
    Name = "Auto Open Dragon Egg",
    CurrentValue = false,
    Flag = "DragoEgg",
    Callback = function(Value)
        toggled = Value

        -- Start a new thread for continuous execution
        spawn(function()
            while toggled do
                game:GetService("ReplicatedStorage"):WaitForChild("rbxts_include")
                :WaitForChild("node_modules")
                :WaitForChild("@rbxts")
                :WaitForChild("remo")
                :WaitForChild("src")
                :WaitForChild("container")
                :WaitForChild("eggs.open")
                :InvokeServer(unpack(args))

                wait(0.5)  -- Adjust the wait time as needed to control the speed
            end
        end)
    end,
})
local Tab = Window:CreateTab("Rebirth", 4483362458) -- Title, Image
local Section = Tab:CreateSection("Rebirth")
local Toggle = Tab:CreateToggle({ 
   Name = "Auto Rebirth", 
   CurrentValue = false,
   Flag = "Rebirth",
   Callback = function(Value)
       if Value then
           -- Start Auto Rebirth loop
           getgenv().AutoRebirth = true
           while getgenv().AutoRebirth do
               game:GetService("ReplicatedStorage")
                   :WaitForChild("rbxts_include")
                   :WaitForChild("node_modules")
                   :WaitForChild("@rbxts")
                   :WaitForChild("remo")
                   :WaitForChild("src")
                   :WaitForChild("container")
                   :WaitForChild("rebirth")
                   :InvokeServer()
               task.wait(1) -- Adjust delay to avoid spamming the server
           end
       else
           -- Stop Auto Rebirth
           getgenv().AutoRebirth = false
       end
   end,
})

Rayfield:LoadConfiguration()
